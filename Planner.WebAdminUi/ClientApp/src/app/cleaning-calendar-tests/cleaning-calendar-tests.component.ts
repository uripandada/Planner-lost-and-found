import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';
import { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';
import { ToastrService } from 'ngx-toastr';
import { BehaviorSubject } from 'rxjs';
import { CleaningPluginsClient, PredictionsTesterRequest, PredictionsTesterResult } from '../core/autogenerated-clients/api-client';
import { CustomDateAdapter } from '../core/custom-date-adapter';
import { LoadingService } from '../core/services/loading.service';

@Component({
  selector: 'app-cleaning-calendar-tests',
  templateUrl: './cleaning-calendar-tests.component.html',
  styleUrls: ['./cleaning-calendar-tests.component.scss'],
  changeDetection: ChangeDetectionStrategy.OnPush,
  providers: [
    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing
    // `MatMomentDateModule` in your applications root module. We provide it at the component level
    // here, due to limitations of our example generation script.
    { provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE] },
    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },
    { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } },
  ],
})
export class CleaningCalendarTestsComponent implements OnInit {
  isLoaded$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);
  testResults$: BehaviorSubject<PredictionsTesterResult> = new BehaviorSubject<PredictionsTesterResult>(null);

  basedOnKeys: { key: string, value: string }[] = [
    { key: "Daily_AnyTime", value: "Daily, AnyTime" },
    { key: "Daily_AnyTime_StayDeparture", value: "Daily, AnyTime, StayDeparture" },
    { key: "Daily_SpecificTimes", value: "Daily, SpecificTimes" },
    { key: "Weekly_FullWeek_AnyTime", value: "Weekly, FullWeek, AnyTime" },
    { key: "Weekly_WorkDays_AnyTime", value: "Weekly, WorkDays, AnyTime" },
    { key: "Weekly_WorkDays_SpecificTimes", value: "Weekly, WorkDays, SpecificTimes" },
    { key: "Monthly_Start", value: "Monthly, Start" },
    { key: "Monthly_Middle", value: "Monthly, Middle" },
    { key: "Monthly_End", value: "Monthly, End" },
    { key: "WeekBased_AllWeeks", value: "WeekBased, AllWeeks" },
    { key: "Periodical_OnceEvery2Nights_FromCheckin", value: "Periodical, OnceEvery2Nights, FromCheckin" },
    { key: "Periodical_OnceEvery3Nights_FromMonday", value: "Periodical, OnceEvery3Nights, FromMonday" },
    { key: "Periodical_OnceEvery2Nights_FromTuesday", value: "Periodical, OnceEvery2Nights, FromTuesday" },
    { key: "Periodical_OnceEvery2Nights_FromWednesday", value: "Periodical, OnceEvery2Nights, FromWednesday" },
    { key: "Periodical_OnceEvery2Nights_FromThursday", value: "Periodical, OnceEvery2Nights, FromThursday" },
    { key: "Periodical_OnceEvery2Nights_FromFriday", value: "Periodical, OnceEvery2Nights, FromFriday" },
    { key: "Periodical_OnceEvery2Nights_FromSaturday", value: "Periodical, OnceEvery2Nights, FromSaturday" },
    { key: "Periodical_OnceEvery2Nights_FromSunday", value: "Periodical, OnceEvery2Nights, FromSunday" },
    { key: "Periodical_Balance2CleaningsOverPeriod", value: "Periodical, Balance2CleaningsOverPeriod" },
    { key: "Periodical_Balance3CleaningsOverReservation", value: "Periodical, Balance3CleaningsOverReservation" },
    { key: "Periodical_Mixed", value: "Periodical, Mixed" },
    { key: "Periodical_Mixed_SundayPostponedToMonday", value: "Periodical, Mixed, SundayPostponedToMonday" },
    { key: "Daily_AnyTime_OnlyDepartures", value: "Daily, AnyTime, OnlyDepartures" },
    { key: "Daily_AnyTime_OnlyVacants", value: "Daily, AnyTime, OnlyVacants" },
    { key: "Daily_AnyTime_OnlyStays", value: "Daily, AnyTime, OnlyStays" },
    { key: "Daily_AnyTime_OnlyOutOfService", value: "Daily, AnyTime, OnlyOutOfService" },
    { key: "Daily_AnyTime_Nights", value: "Daily, AnyTime, Nights" },
    
    { key: "Daily_AnyTime_Nights_Every2FromCheckIn", value: "Daily, AnyTime, Every2NightsFromCheckIn" },
    { key: "Daily_AnyTime_Nights_Every3FromFirstMonday", value: "Daily, AnyTime, Every3NightsFromMonday" },

    { key: "Daily_AnyTime_Rooms", value: "Daily, AnyTime, Rooms" },
    { key: "Daily_AnyTime_Floors", value: "Daily, AnyTime, Floors" },
    { key: "Daily_AnyTime_Sections", value: "Daily, AnyTime, Sections" },
    { key: "Daily_AnyTime_SubSections", value: "Daily, AnyTime, SubSections" },
    { key: "Daily_AnyTime_ReservationSpaceCategories", value: "Daily, AnyTime, ReservationSpaceCategories" },
    { key: "Daily_AnyTime_ProductsOrTags", value: "Daily, AnyTime, ProductsOrTags" },
    { key: "Daily_AnyTime_OtherProperties", value: "Daily, AnyTime, OtherProperties" },
    { key: "Daily_AnyTime_RoomCategories", value: "Daily, AnyTime, RoomCategories" },
    { key: "Periodical_Mixed_OnlyStay", value: "Periodical, Mixed, OnlyStay" },
    { key: "Weekly_WorkDays_AnyTime_OnlyStay", value: "Weekly, WorkDays, AnyTime, OnlyStay" },
    { key: "Daily_AnyTime_Nights_OnlyStay", value: "Daily, AnyTime, Nights, OnlyStay" },
    { key: "Daily_AnyTime_Rooms_OnlyStay", value: "Daily, AnyTime, Rooms, OnlyStay" },
    { key: "Daily_AnyTime_Floors_OnlyStay", value: "Daily, AnyTime, Floors, OnlyStay" },
    { key: "Daily_AnyTime_Sections_OnlyStay", value: "Daily, AnyTime, Sections, OnlyStay" },
    { key: "Daily_AnyTime_SubSections_OnlyStay", value: "Daily, AnyTime, SubSections, OnlyStay" },
    { key: "Daily_AnyTime_ReservationSpaceCategories_OnlyStay", value: "Daily, AnyTime, ReservationSpaceCategories, OnlyStay" },
    { key: "Daily_AnyTime_ProductsOrTags_OnlyStay", value: "Daily, AnyTime, ProductsOrTags, OnlyStay" },
    { key: "Daily_AnyTime_RoomCategories_OnlyStay", value: "Daily, AnyTime, RoomCategories, OnlyStay" },
    { key: "Periodical_Mixed_OnlyStay_Floors", value: "Periodical, Mixed, OnlyStay, Floors" },
    { key: "Weekly_WorkDays_AnyTime_OnlyStay_Floors", value: "Weekly, WorkDays, AnyTime, OnlyStay, Floors" },
    { key: "Daily_AnyTime_Nights_OnlyStay_RoomCategories", value: "Daily, AnyTime, Nights, OnlyStay, RoomCategories" },
    { key: "Daily_AnyTime_Rooms_OnlyStay_RoomCategories", value: "Daily, AnyTime, Rooms, OnlyStay, RoomCategories" },
    { key: "Daily_AnyTime_Floors_OnlyStay_RoomCategories", value: "Daily, AnyTime, Floors, OnlyStay, RoomCategories" },
    { key: "Daily_AnyTime_Sections_OnlyStay_RoomCategories", value: "Daily, AnyTime, Sections, OnlyStay, RoomCategories" },
    { key: "Daily_AnyTime_SubSections_OnlyStay_RoomCategories", value: "Daily, AnyTime, SubSections, OnlyStay, RoomCategories" },
    { key: "Daily_AnyTime_ReservationSpaceCategories_OnlyStay_RoomCategories", value: "Daily, AnyTime, ReservationSpaceCategories, OnlyStay, RoomCategories" },
    { key: "Daily_AnyTime_ProductsOrTags_OnlyStay_RoomCategories", value: "Daily, AnyTime, ProductsOrTags, OnlyStay, RoomCategories" },
    { key: "Periodical_Mixed_OnlyStay_Floors_RoomCategories", value: "Periodical, Mixed, OnlyStay, Floors, RoomCategories" },
    { key: "Weekly_WorkDays_AnyTime_OnlyStay_Floors_RoomCategories", value: "Weekly, WorkDays, AnyTime, OnlyStay, Floors, RoomCategories" },
  ];
  reservationsKeys: { key: string, value: string }[] = [
    { key: "VACANT", value: "Single - vacant" },
    { key: "STAY", value: "Single - stay" },
    { key: "CHECKIN", value: "Single - check in" },
    { key: "CHECKOUT", value: "Single - check out" },
    { key: "DAYSTAY", value: "Single - day stay" },
    { key: "DOUBLE_STAY", value: "Double - stay" },
    { key: "DOUBLE_STAY_CHECKIN", value: "Double - stay + check in" },
    { key: "DOUBLE_STAY_CHECKOUT", value: "Double - stay + check out" },
    { key: "DOUBLE_STAY_DAYSTAY", value: "Double - stay + day stay" },
    { key: "DOUBLE_CHECKIN", value: "Double - check in" },
    { key: "DOUBLE_CHECKOUT_CHECKIN", value: "Double - check out + check in" },
    { key: "DOUBLE_CHECKOUT_CHECKIN_OVERLAPPED", value: "Double - check out + check in (overlapped)" },
    { key: "DOUBLE_CHECKOUT", value: "Double - check out" },
    { key: "DOUBLE_CHECKOUT_DAYSTAY_CONTAINED", value: "Double - check out + day stay (contained)" },
    { key: "DOUBLE_CHECKOUT_DAYSTAY_OVERLAPPED", value: "Double - check out + day stay (overlapped)" },
    { key: "DOUBLE_CHECKOUT_DAYSTAY", value: "Double - check out + day stay" },
    { key: "DOUBLE_DAYSTAY", value: "Double - day stay" },
    { key: "DOUBLE_DAYSTAY_CONTAINED", value: "Double - day stay (contained)" },
    { key: "DOUBLE_DAYSTAY_OVERLAPPED", value: "Double - day stay (overlapped)" },
    { key: "DOUBLE_CHECKIN_DAYSTAY_CONTAINED", value: "Double - check in + day stay (contained)" },
    { key: "DOUBLE_CHECKIN_DAYSTAY_OVERLAPPED", value: "Double - check in + day stay (overlapped)" },
    { key: "DOUBLE_CHECKIN_DAYSTAY", value: "Double - check in + day stay " },
    { key: "TRIPLE_DAYSTAY", value: "Triple - day stay " },
    { key: "TRIPLE_DAYSTAY_CONTAINED", value: "Triple - day stay (contained)" },
    { key: "TRIPLE_DAYSTAY_OVERLAPPED", value: "Triple - day stay (overlapped)" },
    { key: "TRIPLE_DAYSTAY_CASCADE", value: "Triple - day stay (cascade)" },
    { key: "TRIPLE_STAY_CHECKIN_CHECKIN", value: "Triple - stay + check in + check in" },
    { key: "TRIPLE_STAY_CHECKOUT_CHECKIN", value: "Triple - stay + check out + check in" },
    { key: "TRIPLE_STAY_CHECKOUT_CHECKIN_OVERLAPPED", value: "Triple - stay + check out + check in (overlapped)" },
    { key: "TRIPLE_STAY_CHECKOUT_CHECKOUT", value: "Triple - stay + check out + check out" },
    { key: "TRIPLE_STAY_CHECKOUT_DAYSTAY_CONTAINED", value: "Triple - stay + check out + day stay (contained)" },
    { key: "TRIPLE_STAY_CHECKOUT_DAYSTAY_OVERLAPPED", value: "Triple - stay + check out + day stay (overlapped)" },
    { key: "TRIPLE_STAY_CHECKOUT_DAYSTAY", value: "Triple - stay + check out + day stay" },
    { key: "TRIPLE_STAY_DAYSTAY_DAYSTAY", value: "Triple - stay + day stay + day stay" },
    { key: "TRIPLE_STAY_DAYSTAY_CONTAINED", value: "Triple - stay + day stay + day stay (contained)" },
    { key: "TRIPLE_STAY_DAYSTAY_OVERLAPPED", value: "Triple - stay + day stay + day stay (overlapped)" },
    { key: "TRIPLE_STAY_CHECKIN_DAYSTAY_CONTAINED", value: "Triple - stay + check in + day stay (contained)" },
    { key: "TRIPLE_STAY_CHECKIN_DAYSTAY_OVERLAPPED", value: "Triple - stay + check in + day stay (overlapped)" },
    { key: "TRIPLE_STAY_CHECKIN_DAYSTAY", value: "Triple - stay + check in + day stay" },
  ];

  filterForm: FormGroup;

  constructor(
    private _formBuilder: FormBuilder,
    private _toastr: ToastrService,
    private _cleaningPluginsClient: CleaningPluginsClient,
    public loading: LoadingService) {
  }

  ngOnInit(): void {
    this.filterForm = this._formBuilder.group({
      reservationsKey: [this.reservationsKeys[0].key],
      basedOnKey: [this.basedOnKeys[0].key],
    });

    this.filterForm.valueChanges.subscribe(() => {
      this._loadCleaningTests();
    });

    this.loading.reset();
    this._loadCleaningTests();
  }

  private _loadCleaningTests() {
    this.loading.start();

    let formValues = this.filterForm.getRawValue();
    let request = new PredictionsTesterRequest({
      basedOnKey: formValues.basedOnKey,
      reservationsKey: formValues.reservationsKey,
    });

    this._cleaningPluginsClient.getCleaningPluginTests(request).subscribe((result: PredictionsTesterResult) => {
      console.log("LOADED TESTS:", result);
      this.testResults$.next(result);
      this.loading.stop();
      this.isLoaded$.next(true);
    });

    //this._cleaningCalendarClient.getWeeklyCleaningCalendar(request).subscribe((calendar: CleaningCalendarIntervalResult) => {
    //  console.log("LOADED calendar data: ", calendar);
    //  this.calendarDays$.next(calendar.days);
    //  this._allCalendarRooms = calendar.rooms;
    //  this.calendarRooms$.next(calendar.rooms);
    //});
  }

  //private _filterCleaningCalendar(keywords: string) {
  //  let rooms = this._allCalendarRooms.filter(r =>
  //    r.name.indexOf(keywords) >= 0 // if the room name contains the keywords
  //    ||
  //    (r.days.filter(d =>
  //      (d.reservations.filter(re => re.guestName.indexOf(keywords) >= 0)).length > 0
  //      ||
  //      (d.cleanings.filter(cl => cl.cleaningName.indexOf(keywords) >= 0)).length > 0
  //    )).length > 0);
  //  this.calendarRooms$.next(rooms);
  //}

}
