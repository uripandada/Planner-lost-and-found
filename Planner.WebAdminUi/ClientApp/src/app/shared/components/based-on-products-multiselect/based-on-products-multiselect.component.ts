import { Component, Input } from '@angular/core';
import { FormArray, FormBuilder } from '@angular/forms';
import { ActivatedRoute } from '@angular/router';
import { ProductListItem } from '../../../core/autogenerated-clients/api-client';

@Component({
  selector: 'app-based-on-products-multiselect',
  templateUrl: './based-on-products-multiselect.component.html',
  styleUrls: ['./based-on-products-multiselect.component.scss'],
})
export class BasedOnProductsMultiselectComponent {

  @Input() productsTagsFormArray: FormArray;

  @Input() allProducts: Array<ProductListItem> = [];



  basedOnProductTypes: Array<{ key: string, value: string, group: string }> = [
    { key: "EQUALS", value: "Equals", group: "SIMPLE_COMPARISON" },
    { key: "CONTAINS", value: "Contains", group: "SIMPLE_COMPARISON" },
    { key: "BEGINS_WITH", value: "Begins with", group: "SIMPLE_COMPARISON" },
    { key: "ENDS_WITH", value: "Ends with", group: "SIMPLE_COMPARISON" },
    { key: "REGEX", value: "Regex", group: "REGEX" },
  ];

  constructor(private _formBuilder: FormBuilder, private _route: ActivatedRoute) {
  }

  ngOnInit(): void {
    //this.allProducts = this._route.snapshot.data.products;

    if (this.allProducts.length > 0) {
      this.basedOnProductTypes.push({ key: "EXISTING_PRODUCT", value: "Existing product", group: "EXISTING_PRODUCT" });
    }
  }

  add() {
    this.productsTagsFormArray.push(this._createProductOrTagExtendedFormGroup());
  }

  remove(valueFormIndex: number) {
    this.productsTagsFormArray.removeAt(valueFormIndex);
  }


  private _createProductOrTagExtendedFormGroup() {
    return this._formBuilder.group({
      basedOnProductsTagsTypeKey: ["EQUALS"],
      comparisonValue: [""],
      isCaseSensitive: [false],
      productId: [null],
    });
  }
}
