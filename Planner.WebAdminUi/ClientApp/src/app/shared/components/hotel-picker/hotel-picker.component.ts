import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';
import { FormControl } from '@angular/forms';
import { BehaviorSubject, Observable, Subscription } from 'rxjs';
import { debounceTime, map, startWith } from 'rxjs/operators';
import { HotelGridData } from '../../../core/autogenerated-clients/api-client';

@Component({
  selector: 'app-hotel-picker',
  templateUrl: './hotel-picker.component.html',
  styleUrls: ['./hotel-picker.component.scss'],
  changeDetection: ChangeDetectionStrategy.OnPush,
})
export class HotelPickerComponent implements OnInit, OnChanges, OnDestroy {
  @Input() hotelControl: FormControl;
  @Input() hotels: HotelGridData[];

  @Output() hotelSelected: EventEmitter<HotelGridData> = new EventEmitter<HotelGridData>();

  hotelChangedSubscription: Subscription;
  filteredHotels$: BehaviorSubject<HotelGridData[]> = new BehaviorSubject<HotelGridData[]>([]);

  constructor() { }

  ngOnInit(): void {
    //this.filteredHotels$ = this.hotelControl.valueChanges
    //  .pipe(
    //    startWith(''),
    //    map(value => this._filter(value))
    //);

    this.hotelChangedSubscription = this.hotelControl
      .valueChanges
      .pipe(
        debounceTime(250)
      )
      .subscribe((hotel: any) => {
      if (typeof (hotel) === "string") {
        this.filteredHotels$.next(this._filter(hotel));
      }
      else if (typeof (hotel) === "object") {
        this.filteredHotels$.next(this.hotels);
        this.hotelSelected.next(hotel);
      }
    });
  }

  ngOnChanges(changes: SimpleChanges): void {
    this.filteredHotels$.next(this.hotels ?? []);
  }

  ngOnDestroy(): void {
    
  }

  displayHotelName(hotel) {
    if (hotel && typeof (hotel) === "object") {
      return hotel.name;
    }
    return "";
  }

  private _filter(value) {
    if (!value) {
      return this.hotels;
    }

    const filterValue = value.toLowerCase();
    return this.hotels.filter(a => a.name.toLowerCase().indexOf(filterValue) >= 0);
  }
}
