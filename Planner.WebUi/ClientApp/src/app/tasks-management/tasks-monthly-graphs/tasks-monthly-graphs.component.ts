import { Component, EventEmitter, Input, NgZone, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';
import { ECharts } from 'echarts';
import { ToastrService } from 'ngx-toastr';
import { GetMonthlyTasksGraphsDataQuery, MonthlyTasksGraphsViewModel, TasksManagementClient } from '../../core/autogenerated-clients/api-client';
import { LoadingService } from '../../core/services/loading.service';
import moment, { Moment } from 'moment';

@Component({
  selector: 'app-tasks-monthly-graphs',
  templateUrl: './tasks-monthly-graphs.component.html',
  styleUrls: ['./tasks-monthly-graphs.component.scss']
})
export class TasksMonthlyGraphsComponent implements OnInit, OnDestroy, OnChanges {

  @Input() monthlyTasksGraphs: MonthlyTasksGraphsViewModel;

  @Output() dayOfMonthSelected: EventEmitter<number> = new EventEmitter<number>();

  constructor(public loading: LoadingService, private _toastr: ToastrService, private _tasksManagementClient: TasksManagementClient, private _zone: NgZone) { }

  ngOnChanges(changes: SimpleChanges): void {
    this._loadMonthlyTasksGraphsData();
  }

  ngOnDestroy(): void {
  }

  ngOnInit(): void {
  }


  private _tasksChart: ECharts;
  private _workersChart: ECharts;
  private _averageTasksPerUserChart: ECharts;

  private _isTasksChartInitialized: boolean = false;
  private _isWorkersChartInitialized: boolean = false;
  private _isAverageTasksPerUserChartInitialized: boolean = false;

  onWorkersChartInit(chart: ECharts) {
    this._workersChart = chart;
    this._isWorkersChartInitialized = true;
    this._subscribeToChartClick(this._workersChart);
  }

  onTasksChartInit(chart: ECharts) {
    this._tasksChart = chart;
    this._isTasksChartInitialized = true;
    this._subscribeToChartClick(this._tasksChart);
  }

  onAverageTasksPerUserInit(chart: ECharts) {
    this._averageTasksPerUserChart = chart;
    this._isAverageTasksPerUserChartInitialized = true;
    this._subscribeToChartClick(this._averageTasksPerUserChart);
  }

  private _subscribeToChartClick(chart: ECharts) {
    let that = this;

    chart.getZr().on('click', function (event) {
      let pointInPixel = [event.offsetX, event.offsetY];
      let pointInGrid = chart.convertFromPixel('grid', pointInPixel);
      let xValue = pointInGrid[0]; // This is the date in our case
      let yValue = pointInGrid[1]; // This is number of workers

      let dayOfMonth: number = xValue + 1;
      that.onChartMonthDayClick(dayOfMonth);
    });
  }


  //'#AE5C56', '#B57397', '#849CC7', '#3FC2C2', '#77D990','#E2E062'

  chartOption = {
    color: ['#999999', '#43B3FE', '#F65E7D'],
    tooltip: {
      trigger: 'axis',
      axisPointer: {
        type: 'cross',
        crossStyle: {
          color: '#999'
        },
        shadowStyle: {
          color: 'rgba(220,220,220,0.2)'
        },
        label: {
          backgroundColor: '#343434'
        }
      }
    },
    grid: {
      borderColor: '#eee',
      right: 0,
      left: 0,
      top: 30
    },

    //toolbox: {
    //  feature: {
    //    dataView: { show: true, readOnly: false },
    //    magicType: { show: true, type: ['line', 'bar'] },
    //    restore: { show: true },
    //    saveAsImage: { show: true }
    //  }
    //},
    legend: {
      data: ['Workers', 'Tasks', 'AVG tasks per worker'],
      x: 'center',
      y: 'bottom'
    },
    xAxis: [
      {
        type: 'category',
        data: [
          '01.10.', '02.10.', '03.10.', '04.10.', '05.10.', '06.10.', '07.10.', '08.10.', '09.10.', '10.10.',
          '11.10.', '12.10.', '13.10.', '14.10.', '15.10.', '16.10.', '17.10.', '18.10.', '19.10.', '20.10.',
          '21.10.', '22.10.', '23.10.', '24.10.', '25.10.', '26.10.', '27.10.', '28.10.', '29.10.', '30.10.'
        ],
        axisPointer: {
          type: 'shadow'
        },
        axisLine: {
          show: true,
          lineStyle: {
            color: '#eee'
          }
        },
        axisTick: {
          show: false
        },
        axisLabel: {
          color: '#888888'
        }
      }
    ],
    yAxis: [
      {
        type: 'value',
        name: '# workers',
        nameTextStyle: {
          padding: [0, 0, 0, 60],
          color: '#888888',
        },
        min: 0,
        max: 10,
        interval: 5,
        axisLabel: {
          formatter: '{value}',
          color: '#888888',
          inside: true
        },
        axisLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        splitLine: {
          lineStyle: {
            color: '#eee'
          }
        },
      },
      {
        type: 'value',
        name: '# tasks',
        nameTextStyle: {
          padding: [0, 50, 0, 0],
          color: '#888888',
        },
        min: 0,
        max: 100,
        interval: 25,
        axisLabel: {
          formatter: '{value}',
          color: '#888888',
          inside: true
        },
        axisLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        splitLine: {
          lineStyle: {
            color: '#eee'
          }
        },
      },
    ],
    series: [
      {
        name: 'Workers',
        type: 'bar',
        barCategoryGap: '35%',
        data: [
          3, 4, 4, 5, 6, 5, 6, 5, 6, 6,
          4, 5, 4, 5, 4, 5, 3, 5, 4, 6,
          3, 4, 5, 4, 6, 3, 6, 6, 6, 5,
        ]
      },
      {
        name: 'Tasks',
        type: 'bar',
        yAxisIndex: 1,
        barCategoryGap: '35%',
        data: [
          67, 89, 86, 71, 67, 82, 79, 74, 87, 90,
          79, 74, 87, 90, 67, 89, 86, 71, 67, 82,
          67, 89, 79, 74, 87, 90, 86, 71, 67, 82,
        ]
      },
      {
        name: 'AVG tasks per worker',
        type: 'line',
        yAxisIndex: 1,
        data: [
          31.3, 38.8, 34.6, 29.7, 31.5, 35.8, 41.2, 38.5, 37.6, 50.4,
          31.5, 35.8, 41.2, 38.5, 37.6, 50.4, 31.3, 38.8, 34.6, 29.7,
          29.7, 31.5, 35.8, 41.2, 38.5, 37.6, 50.4, 31.3, 38.8, 34.6,
        ]
      }
    ]
  };

  chartWorkersOption = {
    color: ['#B57397'],
    tooltip: {
      trigger: 'axis',
      axisPointer: {
        crossStyle: {
          color: '#999'
        },
        shadowStyle: {
          color: 'rgba(220,220,220,0.2)'
        },
        label: {
          show: false,
          backgroundColor: '#343434',
          margin: -23
        }
      },
      zlevel: 20
    },
    grid: {
      borderColor: '#eee',
      right: 0,
      left: 0,
      top: 20,
      bottom: 15
    },
    legend: {
      show: false
    },
    xAxis: [
      {
        type: 'category',
        data: [],
        axisPointer: {
          type: 'shadow',
          z: 10
        },
        axisLine: {
          show: true,
          lineStyle: {
            color: '#eee'
          }
        },
        axisTick: {
          show: false
        },
        axisLabel: {
          color: '#bbb',
          inside: false,
          fontSize: '10px',
          margin: 4
        },
        zlevel: 1
      }
    ],
    yAxis: [
      {
        type: 'value',
        nameLocaltion: 'middle',
        nameTextStyle: {
          padding: [0, 0, 0, 60],
          color: '#888888',
        },
        min: 0,
        max: 'dataMax',
        interval: 'dataMax',
        axisLabel: {
          formatter: '{value}',
          color: '#888888',
          inside: true,
          show: false
        },
        axisLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        splitLine: {
          lineStyle: {
            color: '#eee'
          }
        },
      }
    ],
    series: [
      {
        step: 'middle',
        name: 'Workers',
        type: 'line',
        showSymbol: false,
        hoverAnimation: false,
        barCategoryGap: '35%',
        label: {
          normal: {
            show: true,
            position: 'top',
            distance: 2,
            fontSize: '10px',
            color: '#545454'
          }
        },
        data: []
      }
    ]
  };

  chartTasksOption = {
    color: ['#43B3FE'],
    tooltip: {
      trigger: 'axis',
      axisPointer: {
        crossStyle: {
          color: '#999'
        },
        shadowStyle: {
          color: 'rgba(220,220,220,0.2)'
        },
        label: {
          show: false,
          backgroundColor: '#343434',
          margin: -23
        }
      },
      zlevel: 20
    },
    grid: {
      borderColor: '#eee',
      right: 0,
      left: 0,
      top: 20,
      bottom: 15
    },
    legend: {
      show: false
    },
    xAxis: [
      {
        type: 'category',
        data: [ ],
        axisPointer: {
          type: 'shadow',
          z: 10
        },
        axisLine: {
          show: true,
          lineStyle: {
            color: '#eee'
          }
        },
        axisTick: {
          show: false
        },
        axisLabel: {
          color: '#bbb',
          inside: false,
          fontSize: '10px',
          margin: 4
        },
        zlevel: 1
      }
    ],
    yAxis: [
      {
        type: 'value',
        nameLocaltion: 'middle',
        nameTextStyle: {
          padding: [0, 0, 0, 60],
          color: '#888888',
        },
        axisPointer: {
          type: 'shadow',
          z: 10,
          show: false
        },
        min: 0,
        max: 'dataMax',
        interval: 'dataMax',
        axisLabel: {
          formatter: '{value}',
          color: '#888888',
          inside: true,
          show: false
        },
        axisLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        splitLine: {
          lineStyle: {
            color: '#eee'
          }
        },
      }
    ],
    series: [
      {
        step: 'middle',
        name: 'Tasks',
        type: 'line',
        showSymbol: false,
        hoverAnimation: false,
        barCategoryGap: '35%',
        label: {
          normal: {
            show: true,
            position: 'top',
            distance: 2,
            fontSize: '10px',
            color: '#545454'
          }
        },
        data: []
      }
    ]
  };

  chartAvgTasksOption = {
    color: ['#F65E7D'],
    tooltip: {
      trigger: 'axis',
      axisPointer: {
        crossStyle: {
          color: '#999'
        },
        shadowStyle: {
          color: 'rgba(220,220,220,0.2)'
        },
        label: {
          show: false,
          backgroundColor: '#343434',
          margin: -23
        }
      },
      zlevel: 20
    },
    grid: {
      borderColor: '#eee',
      right: 0,
      left: 0,
      top: 20,
      bottom: 15
    },
    legend: {
      show: false
    },
    xAxis: [
      {
        type: 'category',
        data: [ ],
        axisPointer: {
          type: 'shadow',
          z: 10
        },
        axisLine: {
          show: true,
          lineStyle: {
            color: '#eee'
          }
        },
        axisTick: {
          show: false
        },
        axisLabel: {
          color: '#bbb',
          inside: false,
          fontSize: '10px',
          margin: 4
        },
        zlevel: 1
      }
    ],
    yAxis: [
      {
        type: 'value',
        nameLocaltion: 'middle',
        nameTextStyle: {
          padding: [0, 0, 0, 60],
          color: '#888888',
        },
        min: 0,
        max: 'dataMax',
        interval: 'dataMax',
        axisLabel: {
          formatter: '{value}',
          color: '#888888',
          inside: true,
          show: false
        },
        axisLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        splitLine: {
          lineStyle: {
            color: '#eee'
          }
        },
      }
    ],
    series: [
      {
        name: 'AVG tasks per worker',
        type: 'line',
        showSymbol: false,
        hoverAnimation: false,
        label: {
          normal: {
            show: true,
            position: 'top',
            distance: 2,
            fontSize: '10px',
            color: '#545454'
          }
        },
        data: []
      }
    ]
  };

  onChartMonthDayClick(day: number) {
    this._zone.run(() => {
      this.dayOfMonthSelected.next(day);
    });
  }

  private _loadMonthlyTasksGraphsData() {
    let that = this;

    if (!this._isAverageTasksPerUserChartInitialized || !this._isTasksChartInitialized || !this._isWorkersChartInitialized) {
      let tid = setInterval(function () {
        if (!that._isAverageTasksPerUserChartInitialized || !that._isTasksChartInitialized || !that._isWorkersChartInitialized) {
          return;
        }

        clearInterval(tid);
        that._setChartData();
      }, 500);
      return;
    }
    else {
      this._setChartData();
    }
  }

  private _setChartData() {
    this._tasksChart.setOption({
      xAxis: [
        {
          data:
            this.monthlyTasksGraphs.labels.map(l => l.text)
        }
      ],
      series: [
        {
          data: this.monthlyTasksGraphs.numberOfTasks
        }
      ]
    });
    this._workersChart.setOption({
      xAxis: [
        {
          data:
            this.monthlyTasksGraphs.labels.map(l => l.text)
        }
      ],
      series: [
        {
          data: this.monthlyTasksGraphs.numberOfWorkers
        }
      ]
    });
    this._averageTasksPerUserChart.setOption({
      xAxis: [
        {
          data:
            this.monthlyTasksGraphs.labels.map(l => l.text)
        }
      ],
      series: [
        {
          data: this.monthlyTasksGraphs.averageTasksPerWorker
        }
      ]
    });
  }

}
