import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';
import { FormBuilder, FormArray } from '@angular/forms';
import { ToastrService } from 'ngx-toastr';
import { CleaningTimelineService } from '../../core/services/cleaning-timeline.service';
import { ITimeIntervalData } from '../../core/autogenerated-clients/api-client';

@Component({
  selector: 'app-time-interval-multiselect',
  templateUrl: './time-interval-multiselect.component.html',
  styleUrls: ['./time-interval-multiselect.component.scss']
})
export class TimeIntervalMultiselectComponent implements OnInit {

  @Input() timeIntervalsFormArray: FormArray;
  @Output() timeIntervalAdded: EventEmitter<ITimeIntervalData> = new EventEmitter<ITimeIntervalData>();
  @Output() timeIntervalRemoved: EventEmitter<number> = new EventEmitter<number>();

  constructor(private _formBuilder: FormBuilder, private _cleaningTimelineService: CleaningTimelineService, private _toastr: ToastrService) {
  }

  ngOnInit(): void {
  }

  addNewInterval() {
    this.timeIntervalAdded.next(<ITimeIntervalData>{ id: null, fromTimeString: "00:00", toTimeString: "00:00" });
    //this._cleaningTimelineService.addAvailabilityInterval();
    //this.timeIntervalsFormArray.push(this._cleaningTimelineService.createTimeIntervalsFormGroup());
  }
  onIntervalRemoved(intervalFormIndex: number) {
    if (this.timeIntervalsFormArray.getRawValue().length <= 1) {
      this._toastr.info("You can't remove the last availability interval.");
    }
    else {
      this.timeIntervalsFormArray.removeAt(intervalFormIndex);
    }


    //this._cleaningTimelineService.addAvailabilityInterval();
    //this.timeIntervalsFormArray.push(this._cleaningTimelineService.createTimeIntervalsFormGroup());
  }
}
