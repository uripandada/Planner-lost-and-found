import { Injectable } from '@angular/core';
import { ActivatedRouteSnapshot, Resolve } from '@angular/router';
import { Observable } from 'rxjs';
import { ExtendedWhereData, GetAllWheresQuery, GetListOfWarehousesQuery, TasksManagementClient, TaskWhereData, WarehouseData, WarehouseManagementClient } from '../autogenerated-clients/api-client';

@Injectable({ providedIn: 'root' })
export class WheresListResolver implements Resolve<Observable<Array<ExtendedWhereData>>> {
  constructor(private tasksManagementClient: TasksManagementClient) { }

  resolve(routeSnapshot: ActivatedRouteSnapshot) {
    let includeReservationsWithoutRooms: boolean = true;
    let ignoreUnAllocatedReservations: boolean = false;
    let ignoreBuildingsMap: boolean = false;
    let ignoreWarehouses: boolean = false;
    let ignoreTemporaryRooms: boolean = false;        
    let ignoreFutureReservations: boolean = false;

    if (routeSnapshot.data['ignoreUnAllocatedReservations']) {
      ignoreUnAllocatedReservations = routeSnapshot.data['ignoreUnAllocatedReservations'];
    }

    if (routeSnapshot.data['ignoreBuildingsMap']) {
      ignoreBuildingsMap = routeSnapshot.data['ignoreBuildingsMap'];
    }

    if (routeSnapshot.data['ignoreWarehouses']) {
      ignoreWarehouses = routeSnapshot.data['ignoreWarehouses'];
    }

    if (routeSnapshot.data['ignoreTemporaryRooms'])     
    {            
      ignoreTemporaryRooms = routeSnapshot.data['ignoreTemporaryRooms'];        
    }        
    
    if (routeSnapshot.data['ignoreFutureReservations'])     
    {            
      ignoreFutureReservations = routeSnapshot.data['ignoreFutureReservations'];        
    }          

    return this.tasksManagementClient.getAllWheres(new GetAllWheresQuery({ includeReservationsWithoutRooms: includeReservationsWithoutRooms, ignoreUnAllocatedReservations: ignoreUnAllocatedReservations, ignoreBuildingsMap: ignoreBuildingsMap, ignoreWarehouses: ignoreWarehouses, ignoreTemporaryRooms: ignoreTemporaryRooms, ignoreFutureReservations: ignoreFutureReservations }));
  }
}

@Injectable({ providedIn: 'root' })
export class WheresListWithReservationsWithRoomsResolver implements Resolve<Observable<Array<ExtendedWhereData>>> {
  constructor(private tasksManagementClient: TasksManagementClient) { }

  resolve(routeSnapshot: ActivatedRouteSnapshot) {
    return this.tasksManagementClient.getAllWheres(new GetAllWheresQuery({ includeReservationsWithoutRooms: false, ignoreUnAllocatedReservations: false, ignoreBuildingsMap: false, ignoreWarehouses: false, ignoreTemporaryRooms: true, ignoreFutureReservations: false }));
  }
}
