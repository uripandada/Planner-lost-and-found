import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';
import { RoomViewDashboardBedItem, RoomViewDashboardRoomItem } from 'src/app/core/autogenerated-clients/api-client';

@Component({
  selector: 'app-rooms-view-dashboard-reservations',
  templateUrl: './rooms-view-dashboard-reservations.component.html'
})
export class RoomsViewDashboardReservationsComponent implements OnInit {

  @Input() room: RoomViewDashboardRoomItem | RoomViewDashboardBedItem;
  @Output() roomMessagesOpened: EventEmitter<boolean> = new EventEmitter<boolean>();

  //isGuestCurrentlyIn$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);

  //private _isBed: boolean = false;

  constructor(
    //private _roomClient: RoomManagementClient,
    //private _toastr: ToastrService,
  ) {
  }

  ngOnInit() {
    //this._isBed = this.room instanceof RoomViewDashboardBedItem;

    //this.isGuestCurrentlyIn$.next(this.room.isGuestCurrentlyIn);
  }

  openRoomMessages() {
    this.roomMessagesOpened.next(true);
  }

  //changeIsGuestCurrentlyInStatus() {
  //  let isGuestCurrentlyIn: boolean = !this.isGuestCurrentlyIn$.value;
  //  let request: UpdateIsGuestCurrentlyInCommand = new UpdateIsGuestCurrentlyInCommand({
  //    isGuestCurrentlyIn: isGuestCurrentlyIn,
  //    roomId: this._isBed ? null : this.room.id,
  //    bedId: this._isBed ? this.room.id : null,
  //  });

  //  this._roomClient.updateIsGuestCurrentlyIn(request).subscribe(
  //    (response: ProcessResponse) => {
  //      if (!response.isSuccess) {
  //        this._toastr.error(response.message);
  //      }

  //      this.isGuestCurrentlyIn$.next(request.isGuestCurrentlyIn);
  //      this._toastr.success(response.message);
  //    },
  //    (error: Error) => {
  //      this._toastr.error(error.message);
  //    },
  //    () => {

  //    }
  //  );
  //}
}
