import { Directive, ElementRef, Input, OnInit } from "@angular/core";
import { CleaningProcessStatus } from "../../core/autogenerated-clients/api-client";

@Directive({
  selector: '[cleaningStatusToIcon]',
})
export class CleaningStatusToIcon implements OnInit {

  @Input() cleaningStatusToIcon: CleaningProcessStatus = CleaningProcessStatus.UNKNOWN;
  isSent: boolean = true;

  constructor(private elementRef: ElementRef) {
  }

  ngOnInit(): void {
    this._setIcon();
  }
  private _setIcon() {
    let cleaningStatusIcon = "";
    switch (this.cleaningStatusToIcon) {
      case CleaningProcessStatus.CLEANING_CANCELLED_BY_ADMIN:
      case CleaningProcessStatus.CLEANING_CANCELLED_BY_CLEANER:
      case CleaningProcessStatus.CLEANING_CANCELLED_BY_SYSTEM:
        cleaningStatusIcon = "icofont-close";
        break;
      case CleaningProcessStatus.DELAYED:
        break;
      case CleaningProcessStatus.DO_NOT_DISTURB:
        break;
      case CleaningProcessStatus.DRAFT:
        break;
      case CleaningProcessStatus.FINISHED:
        cleaningStatusIcon = "icofont-check";
        break;
      case CleaningProcessStatus.INSPECTION_FAILED:
        break;
      case CleaningProcessStatus.INSPECTION_FINISHED:
        break;
      case CleaningProcessStatus.INSPECTION_STARTED:
        break;
      case CleaningProcessStatus.IN_PROGRESS:
        cleaningStatusIcon = "icofont-play-alt-1";
        break;
      case CleaningProcessStatus.NEW:
        break;
      case CleaningProcessStatus.PAUSED:
        cleaningStatusIcon = "icofont-pause";
        break;
      case CleaningProcessStatus.REFUSED:
        break;
      case CleaningProcessStatus.REQUIRES_INSPECTION:
        break;
      case CleaningProcessStatus.SEEN_INSPECTION_FAILED:
        break;
      case CleaningProcessStatus.SEEN_NEW:
        break;
      case CleaningProcessStatus.UNKNOWN:
        break;
      default:
        break;
    }

    if (cleaningStatusIcon === "" && this.isSent) {
      cleaningStatusIcon = "icofont-send-mail"
    }

    if (cleaningStatusIcon === "") {
      this.elementRef.nativeElement.innerHtml = "";
    }
    else {
      this.elementRef.nativeElement.innerHtml = "<i class=\"" + cleaningStatusIcon + "\"></i>";
    }
  }
}
